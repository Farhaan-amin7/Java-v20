Index: src/Java/Practice/Practice_Implement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Java/Practice/Practice_Implement.java b/src/Java/Practice/Practice_Implement.java
new file mode 100644
--- /dev/null	(date 1693576286226)
+++ b/src/Java/Practice/Practice_Implement.java	(date 1693576286226)
@@ -0,0 +1,45 @@
+package Java.Practice;
+interface Absolute{
+    int applyBrakes(int Decrement);
+    int SpeedUp(int increment);
+}
+interface FG{
+    void Ahsher();
+    void fur();
+
+}
+class Atlas implements Absolute,FG {
+
+    int speed=9;
+ public int applyBrakes(int Decrement)
+{
+   return speed=speed-Decrement;
+}
+    public int SpeedUp(int increment)
+{
+    return speed=speed+increment;
+}
+
+    @Override
+    public void Ahsher() {
+        System.out.println("The Bike is faster than the Cycle.");
+        System.out.println("As a human we should care about each other and we should not fight.");
+    }
+    @Override
+    public void fur() {
+        System.out.println("Train is faster than the Bike.");
+    }
+
+
+}
+
+public class Practice_Implement {
+    public static void main(String[] args) {
+        Atlas Cycle=new Atlas();
+        System.out.println("The Speed of the Cycle after applying brakes is "+ Cycle.applyBrakes(8));
+        System.out.println("The Speed of the Cycle after Speeding up is "+ Cycle.SpeedUp(50));
+        Cycle.Ahsher();
+        Cycle.fur();
+
+    }
+}
Index: src/polymorphism_Practice17.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/polymorphism_Practice17.java b/src/polymorphism_Practice17.java
new file mode 100644
--- /dev/null	(date 1693902124010)
+++ b/src/polymorphism_Practice17.java	(date 1693902124010)
@@ -0,0 +1,58 @@
+
+
+class Mytheory1{
+    public Mytheory1()
+    {
+        System.out.println("This is the constructor of the new Theory class");
+    }
+    public void negative()
+    {
+        System.out.println("Never be negative in your life.");
+    }
+    void greet()
+    {
+        System.out.println("Good Afternoon.");
+    }
+}
+interface Father1{
+    void FatherTheory();
+    void FatherTheory2();
+}
+interface GrandFather{
+    void GrandFatherTheory1();
+    void GrandFatherTheory2();
+}
+class MyTheory extends Mytheory1 implements Father1,GrandFather{
+     public MyTheory(){
+         System.out.println("this is a constructor check");
+    }
+    public void FatherTheory()
+    {
+        System.out.println("I am the father and this is my theory");
+    }
+    public void FatherTheory2()
+    {
+        System.out.println("This is my second Theory and its entitled");
+    }
+    public void GrandFatherTheory1()
+    {
+        System.out.println("I am the GrandFather and this is my room");
+    }
+    public void GrandFatherTheory2()
+    {
+        System.out.println("This is the GrandFather speaking, Bring a blanket asap");
+    }
+}
+public class polymorphism_Practice17 {
+
+    public static void main(String[] args) {
+        MyTheory mt=new MyTheory();
+        mt.FatherTheory();
+        mt.GrandFatherTheory1();
+        mt.FatherTheory2();
+        mt.GrandFatherTheory2();
+        mt.greet();
+        mt.negative();
+
+    }
+}
Index: src/Practice17.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Practice17.java b/src/Practice17.java
new file mode 100644
--- /dev/null	(date 1693914467286)
+++ b/src/Practice17.java	(date 1693914467286)
@@ -0,0 +1,44 @@
+//interface BasicAnimal{
+//
+//
+//    public void Eat();
+//    public void Sleep();
+//}
+ abstract class Telephone {
+   abstract void Ring();
+    abstract void Lift();
+
+    abstract void Disconnect();
+}
+class SmartPhone extends Telephone{
+    @Override
+    void Disconnect() {
+        System.out.println("Disconnecting the call");
+
+    }
+
+    @Override
+    void Lift() {
+        System.out.println("Hey! I am going the same way do you want a lift.");
+
+    }
+
+    @Override
+    void Ring() {
+        System.out.println("Your phone is ringing");
+
+    }
+    void Run()
+    {
+        System.out.println("Running faster than 90% of the people.");
+    }
+}
+public class Practice17 {
+    public static void main(String[] args) {
+        Telephone n=new SmartPhone();/*This a basic example of the polymorphism*/
+        n.Disconnect();
+        n.Lift();
+        n.Ring();
+//        n.Run();This will throw an error because Telephone reference does not include this method
+    }
+}
